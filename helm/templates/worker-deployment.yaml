apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "locust.fullname" . }}-worker
  labels:
    component: worker
{{ include "locust.labels" . | indent 4 }}
spec:
  selector:
    matchLabels:
      component: worker
      {{- include "locust.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.worker.replicas }}
{{- with .Values.worker.strategy }}
  strategy:
{{ toYaml . | trim | indent 4 }}
{{- end }}
  template:
    metadata:

      labels:
        component: worker
        {{- include "locust.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.pullSecretName }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ if .Values.worker.image }}{{ .Values.worker.image }}{{ else }}{{ .Values.image.repository }}:{{ .Values.image.tag }}{{ end }}"
{{- with .Values.worker.command }}
        command:
        {{- toYaml . | nindent 8 }}
{{- end }}
        args:
          - --worker
{{- if .Values.worker.args }}
          {{- toYaml .Values.worker.args | nindent 10 }}
{{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- if .Values.worker.pvc.enabled }}
        volumeMounts:
          - name: {{ .Values.storage.volumeName }}
            mountPath: {{ .Values.storage.mountPathName }}
            {{- if .Values.storage.subPath }}
            subPath: {{ .Values.storage.subPath }}
            {{- end }}
{{- end }}
{{- if or .Values.worker.envs_include_default .Values.global.env .Values.worker.env .Values.global.env_secret .Values.global.env_external_secret }}
        env:
{{- if .Values.worker.envs_include_default }}
          - name: host
            value: "{{ .Values.global.host }}"
          - name: LOCUST_MASTER_NODE_HOST
            value: "{{ template "locust.fullname" . }}"
          - name: LOCUST_MASTER_NODE_PORT
            value: "5557"
          - name: LOCUST_LOGLEVEL
            value: "{{ .Values.worker.logLevel }}"
          - name: LOCUST_LOCUSTFILE
            value: "{{ .Values.global.test_file_path }}/{{ .Values.global.test_file }}"
          {{- if .Values.global.env_secret }}
          - name: SECRET_VALUE_API
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.secret_name_api_key_locust }}
                key: x-api-key
          {{- end }}
{{- end }}
{{- range $key, $value := .Values.worker.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
{{- end }}
{{- range $key, $value := .Values.global.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
{{- end }}
{{- end }}
      restartPolicy: {{ .Values.worker.restartPolicy }}
{{- if .Values.worker.pvc.enabled }}
      volumes:
        - name: {{ .Values.storage.volumeName }}
          persistentVolumeClaim:
            claimName: {{ .Values.storage.pvcName }}
{{- end }}
